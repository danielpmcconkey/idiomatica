@page "/PageTurner"
@rendermode InteractiveServer
@inject UserService UserService;


<div class="row  g-2">
    <div class="col-2">
        <p>Page @OnGetCurrentPageNum() of @OnGetTotalPages()</p>
    </div>
    @if (_isPreviousEnabled)
    {
        <div class="col-2">
            <button type="button" class="btn btn-primary" 
                @onclick="@(e => MovePageAsync(@OnGetCurrentPageNum() - 1))">
                @UserService.GetUILabel("btnPreviousPage")
            </button>
        </div>
    }
    <div class="col-2">
        <button type="button" class="btn btn-success"
            @onclick="@(e => ClearPageAsync(@OnGetCurrentPageNum() + 1))">
            @UserService.GetUILabel("btnClearPage")
        </button>
    </div>
    @if (_isNextEnabled)
    {
        <div class="col-2">
            <button type="button" class="btn btn-primary"
                @onclick="@(e => MovePageAsync(@OnGetCurrentPageNum() + 1))">
                @UserService.GetUILabel("btnNextPage")
            </button>
        </div>
    }
    
</div>
@code {
    [Parameter]
    public BookService BookService { get; set; }
    [Parameter]
    public EventCallback<int> OnMovePageAsync { get; set; }
    [Parameter]
    public EventCallback<int> OnClearPageAsync { get; set; }

    private bool _isPreviousEnabled
    {
        get
        {
            if (BookService is null) return false;
            if (BookService.BookCurrentPageNum < 2) return false;
            return true;
        }
    }
    private bool _isNextEnabled
    {
        get
        {
            if (BookService is null) return false;
            if (BookService.BookCurrentPageNum == BookService.BookTotalPageCount) return false;
            return true;
        }
    }

    private async Task MovePageAsync(int targetPageNum)
    {
        await OnMovePageAsync.InvokeAsync(targetPageNum);
    }
    private async Task ClearPageAsync(int targetPageNum)
    {
        await OnClearPageAsync.InvokeAsync(targetPageNum);
    }
    private int OnGetCurrentPageNum()
    {
        if (BookService is null) return 0;
        return BookService.BookCurrentPageNum;
    }
    private int OnGetTotalPages()
    {
        return BookService.BookTotalPageCount;
    }
    
}
