@page "/ErrorAlert"
@rendermode InteractiveServer
@inject UserService UserService;

@if (ErrorState.isError)
{
    <div>
        <Alert @ref="_errorAlert" Color="AlertColor.Danger">
            <div>
                <Icon Name="IconName.ExclamationTriangleFill" class="me-2"></Icon>
                <p>@ErrorState.errorMessage</p>
                @if (ErrorState.code > 0)
                {
                    <p>Code: @ErrorState.code </p>
                }
            </div>
            <Button Color="ButtonColor.Primary" Size="Size.Small" @onclick="CloseErrorAlert">
                @GetCloseLabel()
            </Button>
        </Alert>
    </div>
}


@code {

    // this class has to be bullet proof. Don't throw exceptions from within it
    [Parameter]
    public ErrorState ErrorState { get; set; }

    private Alert _errorAlert;

    private async Task CloseErrorAlert() {
        try
        {
            ErrorState.isError = false;
            ErrorState.errorMessage = "";
            ErrorState.code = 0;
            await _errorAlert?.CloseAsync();
        }
        catch (Exception)
        {
            return;
        }
    }

    
    private string GetCloseLabel()
    {
        try
        {
            return UserService.GetUILabel("closeButton");
        }
        catch(Exception)
        {
            return "Close";
        }
    }
}
