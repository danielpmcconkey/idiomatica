@page "/ErrorAlert"
@rendermode InteractiveServer
@inject UserService UserService;

@if (ErrorState.isError)
{
    <div>
        <Alert @ref="_errorAlert" Color="AlertColor.Danger">
            <div>
                <Icon Name="IconName.ExclamationTriangleFill" class="me-2"></Icon>
                <p>@ErrorState.errorMessage</p>
                
                <p>Code: @ErrorState.code </p>
                <p>Member name: @ErrorState.memberName </p>
                <p>File: @ErrorState.sourceFilePath </p>
                <p>Line: @ErrorState.sourceLineNumber </p>
                
            </div>
            <Button Color="ButtonColor.Primary" Size="Size.Small" @onclick="CloseErrorAlert">
                @GetCloseLabel()
            </Button>
        </Alert>
    </div>
}


@code {
    // this class has to be bullet proof. Don't throw exceptions from within it
    [Parameter]
    public ErrorState ErrorState { get; set; } = default!;

    private Alert _errorAlert = default!;

    private async Task CloseErrorAlert() {
        try
        {
            ErrorState.isError = false;
            ErrorState.errorMessage = "";
            ErrorState.code = 0;
            if(_errorAlert is not null)
                await _errorAlert.CloseAsync();
        }
        catch (Exception)
        {
            return;
        }
    }

    
    private string GetCloseLabel()
    {
        try
        {
            return UserService.GetUILabel("closeButton");
        }
        catch(Exception)
        {
            return "Close";
        }
    }
}
